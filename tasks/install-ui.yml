- name: check ui archive stat
  stat: path={{ consul_download_folder }}/{{ consul_ui_archive }}
  register: consul_archive_ui_stat

- name: download consul ui
  get_url: >
    url={{consul_ui_download}}
    dest={{consul_download_folder}}
    validate_certs=no
  register: consul_ui_was_downloaded
  when: consul_archive_ui_stat.stat.exists == False

- name: copy and unpack ui
  unarchive: >
    src={{ consul_download_folder }}/{{ consul_ui_archive }}
    dest={{ consul_home }}
    copy=no
  when: consul_ui_was_downloaded|changed

- name: set ownership
  file: >
    state=directory
    path={{consul_ui_dir}}
    owner={{consul_user}}
    group={{consul_group}}
    recurse=yes
  when: consul_ui_was_downloaded|changed

- name: consul nginx config
  template: >
    src={{consul_ui_nginx_template}}
    dest=/etc/nginx/sites-available/consul
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and ansible_os_family == "Debian"
  notify:
    - restart nginx

- name: consul nginx config
  file: >
    state=link
    src=/etc/nginx/sites-available/consul
    path=/etc/nginx/sites-enabled/consul
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and consul_enable_nginx_config and ansible_os_family == "Debian"
  notify:
  - restart nginx

- name: consul nginx config
  template: >
    src={{consul_ui_nginx_template}}
    dest=/etc/nginx/conf.d/consul.conf
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and ansible_os_family == "RedHat"

- name: create nginx home
  file: >
    state=directory
    path=/var/www/consul/htdocs
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and consul_enable_nginx_config
  notify:
    - restart nginx
  when: consul_enable_nginx_config
